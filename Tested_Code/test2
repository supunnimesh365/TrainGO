import React, { Component } from 'react';
import { View, Text, StatusBar, Button, StyleSheet, Image, Dimensions, Animated, TouchableOpacity, Easing } from 'react-native';
import {TapGestureHandler,  State} from 'react-native-gesture-handler';
// import { Easing } from 'react-native-reanimated';

const {Value, event, block, cond, eq, set, Clock, startClock, stopClock, debug, timing, clockRunning} = Animated
const { width, height } = Dimensions.get('window')

function runTiming(clock, value, dest){
  const state = {
    finished: new Value(0),
    position: new Value(0),
    time: new Value(0),
    frameTime: new Value(0),
  };

  const config = {
    duration: 5000,
    toValue: new Value(0),
    easing: Eaasing.inOut(Easing.ease),
  };

  return block([
    cond(clockRunning(clock), 0, [
      set(state.finished, 0),
      set(state.time, 0),
      set(state.position, value),
      set(state.frameTime, 0),
      set(config.toValue, dest),
      startClock(clock),
    ]),
    timing(clock, state, config),
    cond(state.finished, debug('stop clock', stopClock(clock))),
    state.position,
  ]);
}

class Welcome extends Component {
  constructor(props) {
    super(props);
    this.buttonOpacity = new Value(1)
    this.onStateChange = event([
      {
        nativeEvent: ({state}) => block([
          cond(eq(state, State.END), set(this.buttonOpacity, runTiming(new Clock(), 1, 0))) 
        ])
      }
    ])
    this.state = {
      fadeValue: new Animated.Value(0),
    };
  }

  componentDidMount() {
    this._fadeAnimation();
  }

  _fadeAnimation = () =>{
    Animated.timing(this.state.fadeValue, {
      toValue: 1,
      duration: 1000
    }).start();
  }

  render() {
    return (
      <View  style={styles.container}>
        <StatusBar
          translucent
          backgroundColor="#ffffff"
          barStyle="dark-content"
        />
        <Animated.View style={[styles.animationView,  {opacity: this.state.fadeValue}]}>
          <Image source={require('./../assets/Train05.png')} />
        </Animated.View>

        {/* <View style={{ ...StyleSheet.absoluteFill }}>
        </View> */}
        {/* <View style={{ height: height / 5 * 2 }}></View> */}
        <View style={styles.btnContainer}>
          <TapGestureHandler onHandlerStateChange={this.onStateChange}>
          <Animated.View style={{...styles.button, opacity:this.buttonOpacity}}>
          <TouchableOpacity title="Login" onPress={() => this.props.navigation.navigate('Dashboard')}><Text>Login</Text></TouchableOpacity>
          </Animated.View>
          </TapGestureHandler>
          <TouchableOpacity style={styles.button} title="Sign Up" onPress={() => this.props.navigation.navigate('Signup')}><Text>Sign Up</Text></TouchableOpacity>
        </View>
      </View>
    );
  }
}

export default Welcome;

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'white',
  },
  header: {
    fontSize: 50,
    textAlign: 'center',
    margin: 10,
    marginBottom: 90,
    color: 'black',
  },
  btnContainer: {
    position: 'absolute',
    left:0,
    right: 0,
    bottom: 0,
    height: 200,
    padding: 20,
    backgroundColor: 'yellow'
  },
  button: {
    backgroundColor: 'white',
    height: 70,
    marginHorizontal: 20,
    borderRadius: 35,
    alignItems: 'center',
    justifyContent: 'center',
    marginVertical: 4,
  },
  animationView: {

  }
});
